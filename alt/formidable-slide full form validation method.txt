<?php
/*
Plugin Name: Formidable Slide Forms
Description: adds slide action to a Formidable form.  Shortcode [frmslide]
Version:     0.1
Plugin URI:  
Author:      Andrew J Klimek
Author URI:  https://github.com/andrewklimek
License:     GPL2
License URI: https://www.gnu.org/licenses/gpl-2.0.html
*/


function frmslide_shortcode($a,$c=''){
	
	if ( strpos( $c, '[formidable') )
		return "<p>Wrap this shortcode around a formidable form shortcode, like: [frmslide][formidable id=x][frmslide]";
	
	ob_start();
	
	?>
	<div id=frm-form-slider>
	<style>
	#frm-form-slider fieldset {
	    overflow-x: hidden;
	}
	#frm-form-slider .frm_fields_container {
	    display: flex;
	    position: relative;
	    transition: transform 0.4s;
	}
	#frm-form-slider .frm_form_field {
	    flex: 0 0 auto;
	    width: 100% !important;
	    padding: 0 1em;
	}
	
	/* cool styling */
	#frm-form-slider .frm_radio label.radio-selected {
	    border: 2px solid #fe5341;
	    /* font-weight: 700; */
	}

	#frm-form-slider .frm_radio > label {
	    min-width: 10em;
	    border: 1px solid currentColor;
	    padding: 1ex;
	    margin: 1ex 0;
	    display: inline-block;
	    border-radius: .3em;
	    text-indent: 0;
		cursor: pointer;
	}
	#frm-form-slider .frm_radio > label:hover {
	    transform: translate(1px,1px);
	}
	#frm-form-slider .frm_radio > label:active {
	    transform: translate(2px,2px);
	}
	#frm-form-slider .frm_radio input {
/*	    display: none*/
	}
	
	.frm-slide-invalid-msg {
		display: none;
		color: #f55;
		font-weight: 700;
	}
	.frm-slide-invalid > .frm-slide-invalid-msg {
		display: block;
	}
	.frm-slide-invalid {
		border-left: #f55 3px solid;
	}
	</style>
	<?php
	
	// process formidable shortcode to print form
	echo do_shortcode($c);
	
	?>
	<div><button id=frm-form-slider-prev>Back</button><button id=frm-form-slider-next>Next</button></div>
	<script>//(function(){
	var track = document.querySelector('#frm-form-slider .frm_fields_container')
		, activeAttribute = 'data-slideform'
		, activeSlide
		, firstSlide = 1
		, reqFields, form = document.querySelector('#frm-form-slider form')// for validation
		;

	function nextOnChange(e){
		!~this.className.indexOf('frm_section') && setTimeout( function(){next(0)}, 99);
	}
	function next(prev) {
		activeSlide = track.querySelector('['+ activeAttribute +']') || track.firstElementChild;

		// validation
		// first remove any required attribute left behind (fields that are now hidden)
		jQuery(track).find('[required]').removeAttr('required');
		
		reqFields = !~activeSlide.className.indexOf('frm_required_field') ? '.frm_required_field input, .frm_required_field select' : 'input, select';
		reqFields = activeSlide.querySelectorAll(reqFields);
		// only validate if moving forward
		if ( ! prev ) {
			for ( var i=0; i<reqFields.length; i++ ) {
				if ( reqFields[i].clientWidth ) {
					reqFields[i].required=true;
				}
			}
			if ( ! form.checkValidity() ) {
				// console.log("required fields are not filled");
				return;
			}
		}
		// remove required attributes from current slide befored moving on (in eaither direction)
		// for ( var i=0; i<reqFields.length; i++ ) { reqFields[i].removeAttribute('required'); }
		
		activeSlide.removeAttribute(activeAttribute);
		activeSlide.removeEventListener('change',nextOnChange);
		do {
			activeSlide = prev ? activeSlide.previousElementSibling : activeSlide.nextElementSibling || track.firstElementChild;
		}
		while ( activeSlide.style.display == 'none' || ( !~activeSlide.className.indexOf('frm_form_field') && !~activeSlide.className.indexOf('frm_submit') ) );
		
		// disable back button on first slide
		// mark first field
		if ( firstSlide ) {
			firstSlide = 0;
			activeSlide.className += ' frm-first-slide';
		}
		document.getElementById('frm-form-slider-prev').disabled = ~activeSlide.className.indexOf('frm-first-slide') ? true : false;

		// focus on field in new slide
		setTimeout( focusNewSlide, 500 );
		function focusNewSlide(){
			activeSlide.querySelector('input,textarea,select').focus();
		}
		
		track.style.transform = 'translateX(-'+ activeSlide.offsetLeft +'px)';
		activeSlide.setAttribute(activeAttribute,'');
		activeSlide.addEventListener('change',nextOnChange);	
		
	}
	
	function disableTab(e){
		if ( e.keyCode === 9 ) {
			if ( null === document.querySelector('[data-slideform] .frm_form_field') )
				next(0);
		}
	}
	window.addEventListener('keyup', disableTab );

	
	document.getElementById('frm-form-slider-prev').addEventListener('click',function(){next(1)});
	document.getElementById('frm-form-slider-next').addEventListener('click',function(){next(0)});
	next(0);
	
	// styling stuff
	jQuery('.vertical_radio').change(function(e){
		jQuery(this).find('label').removeClass('radio-selected');
		if ( e.target.checked ) {
			e.target.parentElement.classList.add('radio-selected');
		}
	});
	
	//validation
	var allFields = jQuery(track).find('input,textarea,select')
	, invClass = 'frm-slide-invalid';
	allFields.on('invalid', function(e){
		// if ( this == document.querySelector( '[name="' + this.name +'"]' ) ) {
			// jQuery(this).closest('.frm_form_field').prepend('<span class=frm-slide-invalid>' + this.getAttribute('data-reqmsg') );
		// }
		
		var f = jQuery(this).closest('.frm_form_field');
		if ( ! f.hasClass(invClass) ) {
			f.addClass(invClass);
			var invmsg = this.getAttribute('data-reqmsg');
			if ( ! invmsg ) invmsg = "This field cannot be blank";
			f.prepend('<span class='+invClass+'-msg>' + invmsg + '</span>' );
		}
		f.on('input, change', function(){
			this.classList.remove(invClass);
		});
	});
	
	//})();</script>
	</div>
	<?php
	
	/*** JS before minification
	
	***/

	
	$return = ob_get_clean();
		
	return $return;
	
}
add_shortcode( 'frmslide', 'frmslide_shortcode');